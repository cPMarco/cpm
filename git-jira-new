#!/usr/bin/perl
use strict;
use warnings;

# after you've created a new branch from jira, this sets up the new branch locally

my $remote = 'wombats';

if ( @ARGV < 1 or 2 < @ARGV or $ARGV[0] =~ /^-h$|^-help$|^--help$/ ) {
    help();
    exit;
}

# Get input - branch name, and maybe a custom name
# TODO: accept just the jira number (if more than one branch -r result, then ask user to enter full path)
my $branch_i_want = shift;
$branch_i_want =~ s!(^/)?($remote/)?!!;

my $short_name = shift;
if ( !defined $short_name ) {
    $short_name = $branch_i_want;
    $short_name =~ s!^.*/!!;
}

# create the branch
# system ("git fetch $remote"); # this probably isn't needed if I'm fetching origin
system ("git fetch origin");
system ("echo git checkout --track -b $short_name origin/$branch_i_want");
print "Proceed?\n";
$/ = "\n"; # if I want to keep this, use readline
my $ans = <STDIN>;
exit if ($ans =~ /n|N/);
system ("git checkout --track -b $short_name origin/$branch_i_want");


sub help {
    print "\nPlease enter one or two arguments. Example of two:\n";
    print "git jira-new bugfix/MW-827-simplify-wait_for_backups-by-using MW-827-simplify-wait_for_backups\n";
    print "\nNote that setting upstream is not needed: ~/.gitconfig use [push] 'default = upstream' instead of simple\n\n";
}
